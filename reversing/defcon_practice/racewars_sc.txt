void swap(unsigned char *a, unsigned char *b) {
    int tmp = *a;
    *a = *b;
    *b = tmp;
}

int KSA(char *key, unsigned char *S) {

    int len = 4;
    int j = 0;

    for(int i = 0; i < 256; i++)
        S[i] = i;

    for(int i = 0; i < 256; i++) {
        j = (j + S[i] + key[i % len]) % 256;

        swap(&S[i], &S[j]);
    }

    return 0;
}

int rc4(unsigned char *S, unsigned char *plaintext, unsigned char *ciphertext, int clen) {

    int i = 0;
    int j = 0;

    for(size_t n = 0; n < clen; n++) {
        i = (i + 1) & 0xff;
        j = (j + S[i]) & 0xff;

        swap(&S[i], &S[j]);
        int rnd = S[(S[i] + S[j]) & 0xff];

        ciphertext[n] = rnd ^ plaintext[n];

    }

    return 0;
}


void main(){ 
int xkey;
read(0, &xkey, 4);
xkey = xkey ^ *(int*)(0x0000000000401F88); // jett
unsigned char buf[32];
unsigned char S[257];
unsigned char cbuf[32];
KSA((char*)&xkey, S);
read(0, buf, 32);
rc4(S, buf, cbuf, 32);
int fd = open((char*)cbuf, O_RDONLY, O_RDONLY);
read(fd, buf, 32);
rc4(S, buf, cbuf, 32);
write(1, cbuf, 32); 

}


